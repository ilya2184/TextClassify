#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаНачала = НачалоКвартала(НачалоКвартала(ТекущаяДатаСеанса())-1);
	ДатаОкончания = КонецКвартала(ДатаНачала);
	ШтрафЗаДлину = -0.02;
	
	ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя;
	НазначениеПлатежа = " АВАНС ПО ЗАЯВКЕ № 02_ФА_7748 ОТ 28.05.2024 ПО СЧЕТУ № № 02_ФА_7748 ОТ 28.05.2024 Г. СУММА 1600000-00 В Т.Ч. НДС (20%) 266666-67";
	
	СписокНомеров = "ФА_7748,
	|П_7747
	|Заявка 02_ФА_7748
	|02_ФА_7748
	|Заявка 01_ФА_7748
	|01_ФА_7748
	|2П3_141272/7298/У
	|
	|"",
	|04_2Л3_141272/6254
	|02_2Л3_141272/6254
	|03_2Л3_141272/6254
	|01_2Л3_141272/6254
	|2Л3_141272/6254
	|2П3_141272/6455
	|СОГЛАШЕНИЕ О ПРЕКРАЩЕНИИ ДЕНЕЖНЫХ ОБЯЗАТЕЛЬСТВ";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОбучение(Команда)
	
	ОтветСервера = ВыполнитьОбучениеНаСервере(ДатаНачала, ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьТестирование(Команда)
	ОтветСервера = ВыполнитьТестированиеНаСервере(ДатаНачала, ДатаОкончания);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМодель(Команда)
	
	ОтветСервера = ПроверитьМодельНаСервере(Строка(ВидОперации), НазначениеПлатежа);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьНомер(Команда)
	
	ОтветСервера = ПодобратьНомерНаСервере(СписокНомеров, НазначениеПлатежа, ШтрафЗаДлину);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Обучение

&НаСервереБезКонтекста
Функция ВыполнитьОбучениеНаСервере(Знач ДатаНачала, Знач ДатаОкончания)
	
	Результат = ВыбратьОбучающийРезультат(ДатаНачала, ДатаОкончания);
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xlsx");
	
	ВыгрузитьРезультатВXLSX(Результат, ИмяФайла);
	
	ИмяМодели = "model_slp";
	АдресСервиса = "http://127.0.0.1:5000";
	ПутьСервиса = "/train";
	ОтветСтрока = ОбучитьМодельНаСервисе(ИмяФайла, АдресСервиса + ПутьСервиса, ИмяМодели);
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат ОтветСтрока;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ВыгрузитьРезультатВXLSX(Результат, ИмяВременногоФайла);
	
	ТабДокумент = Новый ТабличныйДокумент;
	НомерСтроки = 1;
	
	НомерКолонки = 1;
	Для Каждого Колонка Из Результат.Колонки Цикл
		Область = ТабДокумент.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
		Область.Текст = Колонка.Имя;
		НомерКолонки = НомерКолонки + 1;
	КонецЦикла;
	НомерСтроки = НомерСтроки + 1;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НомерКолонки = 1;
		Для Каждого Колонка Из Результат.Колонки Цикл
			Область = ТабДокумент.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
			Область.Текст = Строка(Выборка[Колонка.Имя]);
			НомерКолонки = НомерКолонки + 1;
		КонецЦикла;
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	ТабДокумент.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.XLSX);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыбратьОбучающийРезультат(ДатаНачала, ДатаОкончания);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабРеквизиты.ВидОперации КАК ВидОперации,
	|	ТабРеквизиты.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ТабРеквизиты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.ПоступлениеНаРасчетныйСчет КАК ТабРеквизиты
	|ГДЕ
	|	ТабРеквизиты.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабРеквизиты.ВидОперации,
	|	ТабРеквизиты.НазначениеПлатежа,
	|	ТабРеквизиты.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.СписаниеСРасчетногоСчета КАК ТабРеквизиты
	|ГДЕ
	|	ТабРеквизиты.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбучитьМодельНаСервисе(ИмяФайла, ПутьСервиса, ИмяМодели)
	
	ФайлДляПост = НовыйФайлДляПост();
	ФайлДляПост.Имя = "file";
	ФайлДляПост.Данные = Новый ДвоичныеДанные(ИмяФайла);
	ФайлДляПост.ИмяФайла = ИмяФайла;
	
	ПараметрыПост = НовыеПараметрыПостФайлыИФорма();
	ПараметрыПост.Файлы.Добавить(ФайлДляПост);
	ПараметрыПост.Данные.Вставить("model_id", ИмяМодели);
	
	ОтветСервера = КоннекторHTTP.Post(ПутьСервиса, Неопределено, ПараметрыПост);
	
	ОтветСтрока = Строка(ОтветСервера.КодСостояния) + ":" + Символы.ПС
		+ КоннекторHTTP.КакТекст(ОтветСервера);
	
	Возврат ОтветСтрока;
	
КонецФункции

#Область КонструктуорыОбучения

&НаСервереБезКонтекста
Функция НовыйФайлДляПост()
	
	ФайлДляПост = Новый Структура();
	ФайлДляПост.Вставить("Имя", "");
	ФайлДляПост.Вставить("Данные", Неопределено);
	ФайлДляПост.Вставить("ИмяФайла", "");
	
	Возврат ФайлДляПост;
	
КонецФункции

&НаСервереБезКонтекста
Функция НовыеПараметрыПостФайлыИФорма()
	
	ПараметрыПост = Новый Структура();
	ПараметрыПост.Вставить("Файлы", Новый Массив);
	ПараметрыПост.Вставить("Данные", Новый Структура);
	
	Возврат ПараметрыПост;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Проверка

&НаСервереБезКонтекста
Функция ПроверитьМодельНаСервере(Знач ВидОперации, Знач НазначениеПлатежа)

	ИмяМодели = "model_slp";
	АдресСервиса = "http://127.0.0.1:5000";
	ПутьСервиса = "/predict";
	ОтветСтрока = ПроверитьМодельНаСервисе(ВидОперации, НазначениеПлатежа, АдресСервиса + ПутьСервиса, ИмяМодели);
	
	Возврат ОтветСтрока;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьМодельНаСервисе(ВидОперации, НазначениеПлатежа, ПутьСервиса, ИмяМодели)

	ПараметрыПост = НовыеПараметрыПостФайлыИФорма();
	ПараметрыПост.Данные.Вставить("model_id", ИмяМодели);
	ПараметрыПост.Данные.Вставить("operation", ВидОперации);
	ПараметрыПост.Данные.Вставить("text", НазначениеПлатежа);
	
	ОтветСервера = КоннекторHTTP.Post(ПутьСервиса, Неопределено, ПараметрыПост);
	
	ОтветСтрока = Строка(ОтветСервера.КодСостояния) + ":";
	
	ОтветОк = 200;

	Если ОтветСервера.КодСостояния = ОтветОк Тогда
		Соответствие = КоннекторHTTP.КакJson(ОтветСервера);
		Для Каждого КлючЗначение Из Соответствие Цикл
			ОтветСтрока = ОтветСтрока + Символы.ПС
				+ КлючЗначение.Ключ + " = " + КлючЗначение.Значение;
		КонецЦикла;
	Иначе
		ОтветСтрока = ОтветСтрока
			+ КоннекторHTTP.КакТекст(ОтветСервера);
	КонецЕсли;
	
	Возврат ОтветСтрока;
	
КонецФункции

#КонецОбласти

#Область Тестирование

&НаСервереБезКонтекста
Функция ВыполнитьТестированиеНаСервере(Знач ДатаНачала, Знач ДатаОкончания)
	
	Результат = ВыбратьОбучающийРезультат(ДатаНачала, ДатаОкончания);
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xlsx");
	
	ВыгрузитьРезультатВXLSX(Результат, ИмяФайла);
	
	ИмяМодели = "model_slp";
	АдресСервиса = "http://127.0.0.1:5000";
	ПутьСервиса = "/test";
	ОтветСтрока = ОбучитьМодельНаСервисе(ИмяФайла, АдресСервиса + ПутьСервиса, ИмяМодели);
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат ОтветСтрока;
	
КонецФункции

#КонецОбласти

&НаСервереБезКонтекста
Функция ПодобратьНомерНаСервере(СписокНомеров, НазначениеПлатежа, ШтрафЗаДлину)
	
	Номера = СтрРазделить(СписокНомеров, Символы.ПС);
	
	АдресСервиса = "http://127.0.0.1:5000";
	ПутьСервиса = "/stringmatch";
	ОтветСтрока = НаиболееПодходящаяСтрокаСервисом(Номера, НазначениеПлатежа, ШтрафЗаДлину, АдресСервиса + ПутьСервиса);
	
	Возврат ОтветСтрока;
	
КонецФункции

&НаСервереБезКонтекста
Функция НаиболееПодходящаяСтрокаСервисом(Номера, НазначениеПлатежа, ШтрафЗаДлину, ПутьСервиса)
	
	СтруктураТела = Новый Структура();
	СтруктураТела.Вставить("string_list", Номера);
	СтруктураТела.Вставить("text", НазначениеПлатежа);
	СтруктураТела.Вставить("length_penalty_factor", ШтрафЗаДлину);
	
	ОтветСервераСоответствие = КоннекторHTTP.PostJson(ПутьСервиса, СтруктураТела);
	
	ОтветСтрока = "Получено:";
	Для Каждого КлючЗначение Из ОтветСервераСоответствие Цикл
		ОтветСтрока = ОтветСтрока + Символы.ПС
			+ КлючЗначение.Ключ + " = " + КлючЗначение.Значение;
	КонецЦикла;
	
	Возврат ОтветСтрока;
	
КонецФункции


#КонецОбласти
